name: SonarQube Scan
# This workflow is a starter template for scanning projects that are built with Gradle.
# Repositories using this workflow need to have SonarQube added to their build.gradle file in the top level directory.
# For more information, please see the SonarQube setup documentation: https://docs.sonarqube.org/latest/analysis/scan/sonarscanner-for-gradle/
on:
  push:
    branches:
      - main # or the name of the branch you want to scan
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build & Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          # Sonar secrets are set at the organization level and do not need to be configured by you
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: ./gradlew build sonarqube --info
